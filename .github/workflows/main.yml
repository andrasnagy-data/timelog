name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        
    - name: Run tests
      run: go test -v ./...
      
    - name: Run go mod tidy
      run: go mod tidy && git diff --exit-code
      
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build Docker image
      run: docker build -t timelog:latest .
        
  deploy:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Login to Heroku Container Registry
      run: echo ${{ secrets.HEROKU_API_KEY }} | docker login --username=_ --password-stdin registry.heroku.com
        
    - name: Build and push to Heroku
      run: |
        docker build -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web .
        docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
        
    - name: Deploy to Heroku
      run: |
        curl -X PATCH https://api.heroku.com/apps/${{ secrets.HEROKU_APP_NAME }}/formation \
          -H "Authorization: Bearer ${{ secrets.HEROKU_API_KEY }}" \
          -H "Content-Type: application/json" \
          -H "Accept: application/vnd.heroku+json; version=3.docker-releases" \
          -d '{"updates":[{"type":"web","docker_image":"registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web"}]}'